name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  sanity_test:
    runs-on: ubuntu-20.04
    name: ansible-test docker
    steps:
      - name: Install Python 3.9
        run: |
          sudo apt-get update
          sudo apt-get install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install python3.9-venv -y

      - name: Install ansible.posix
        run: ansible-galaxy collection install -c ansible.posix

      - name: Checkout
        uses: ovirt/checkout-action@main

      - name: Build the project
        run: ./build.sh build ovirt /tmp

      - name: Run ansible-test sanity
        run: |
          cd /tmp/ansible_collections/ovirt/ovirt/
          ANSIBLE_TEST_PREFER_PODMAN=1 ansible-test sanity --docker

      - name: Run ansible-lint 6.y.z
        run: |
          set -e
          # Activate Python 3.9 virtualenv and run ansible-lint there
          python3.9 -m venv venv
          source venv/bin/activate
          cd /tmp/ansible_collections/ovirt/ovirt/
          pip3 install --upgrade pip
          pip3 install \
            pycodestyle \
            pylint \
            voluptuous \
            yamllint \
            rstcheck \
            antsibull-changelog \
            rich \
            "ansible-lint>=6.0.0,<7.0.0" \
            cryptography \
            "pyyaml>=5.4.1"
          ansible-lint -x 'key-order[task],no-free-form,schema[vars],yaml[octal-values],risky-shell-pipe,fqcn[keyword]' roles/*
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: centos-stream-8
            pip-command: pip3.9
            container-name: el8stream
          - name: centos-stream-9
            pip-command: pip3
            container-name: el9stream
    name: ${{ matrix.name }}
    container:
      image: quay.io/ovirt/buildcontainer:${{ matrix.container-name }}
    steps:
      - name: Install python3.9 modules
        run: ${{ matrix.pip-command }} install pycodestyle pylint voluptuous yamllint rstcheck antsibull-changelog rich "ansible-lint>=6.0.0,<7.0.0" cryptography

      - name: Install ansible.posix
        run: ansible-galaxy collection install -c ansible.posix

      - name: Checkout
        uses: ovirt/checkout-action@main

      - name: Run build.sh
        run: .automation/build.sh

      - name: Upload artifacts
        uses: ovirt/upload-rpms-action@main
        with:
          directory: exported-artifacts
